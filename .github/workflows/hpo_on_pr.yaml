name: HPO Test on Pull Request

# Controls when the action will run. 
on:
  pull_request:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  test_on_docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          repository: chandrams/hpo
          ref: trial
          path: hpo
      - name: Build hpo
        run: |
          echo Build hpo container image
          ls
          cd hpo
          ./build_hpo.sh
          docker images | grep hpo
          docker ps -a
          ./deploy_hpo.sh -c docker -h kruize/hpo:0.0.1
          sleep 10
          docker ps -a
          curl -V
          #echo "Running curl cmd..."
          #curl -s -H 'Content-Type: application/json' http://localhost:8085/experiment_trials -d '{"operation":"EXP_TRIAL_GENERATE_NEW","search_space":{"experiment_name":"petclinic-sample-2-75884c5549-npvgd","total_trials":5,"parallel_trials":1,"experiment_id":"a123","value_type":"double","hpo_algo_impl":"optuna_tpe","objective_function":"transaction_response_time","tunables":[{"value_type":"double","lower_bound":150,"name":"memoryRequest","upper_bound":300,"step":1},{"value_type":"double","lower_bound":1,"name":"cpuRequest","upper_bound":3,"step":0.01}],"slo_class":"response_time","direction":"minimize"}}'
          #crl -H 'Accept: application/json' http://localhost:8085/experiment_trials?experiment_id=a123&trial_number=0
          echo "Running docker logs..."
          docker logs hpo_docker_container
          
      - name: Sanity test on docker
        run: |
          echo Running sanity test on native
          ls
          cd hpo/tests         
          ./test_hpo.sh -c docker -o kruize/hpo:0.0.1 --resultsdir=${GITHUB_WORKSPACE} --testsuite=hpo_api_tests --testcase=hpo_sanity_test
        
      - name: Archive results
        if: always()
        run: |
          cd ${GITHUB_WORKSPACE}
          ls
          tar cvf hpo_docker_results.tar hpo_test_results
          ls
          
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v2
        with:
           name: hpo-results
           path: ./hpo_docker_results.tar
           retention-days: 2



  test_on_native:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: chandrams/hpo
          ref: trial
          path: hpo
      - name: Sanity test on native
        run: |
          python --version
          echo "Curl version..."
          curl -V
          cd hpo         
          echo "Starting hpo service..."
          #./tests/scripts/hpo/start_hpo_servers.sh -p ${GITHUB_WORKSPACE} 
         
          ./deploy_hpo.sh -c native &
          sleep 20
          ps -ef | grep python
          
          #echo "Running curl cmd to post the experiment..."
          #curl -s -H 'Content-Type: application/json' http://localhost:8085/experiment_trials -d '{"operation":"EXP_TRIAL_GENERATE_NEW","search_space":{"experiment_name":"petclinic-sample-2-75884c5549-npvgd","total_trials":5,"parallel_trials":1,"experiment_id":"a123","value_type":"double","hpo_algo_impl":"optuna_tpe","objective_function":"transaction_response_time","tunables":[{"value_type":"double","lower_bound":150,"name":"memoryRequest","upper_bound":300,"step":1},{"value_type":"double","lower_bound":1,"name":"cpuRequest","upper_bound":3,"step":0.01}],"slo_class":"response_time","direction":"minimize"}}'
          #curl -H 'Accept: application/json' http://localhost:8085/experiment_trials?experiment_id=a123&trial_number=0
          echo "Terminating the HPO service..."
          ps -u | grep service.py | grep -v grep | awk '{print $2}' 
          ps -u | grep service.py | grep -v grep | awk '{print $2}' | xargs kill -9
          #./deploy_hpo.sh -c native -t
          echo Running sanity test on native
          ls
          cd tests
          ./test_hpo.sh -c native --resultsdir=${GITHUB_WORKSPACE} --testsuite=hpo_api_tests --testcase=hpo_sanity_test
        
      - name: Archive results
        if: always()
        run: |
          cd ${GITHUB_WORKSPACE}
          ls
          tar cvf hpo_native_results.tar hpo_test_results
          ls
          
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v2
        with:
           name: hpo-results
           path: ./hpo_native_results.tar
           retention-days: 2

